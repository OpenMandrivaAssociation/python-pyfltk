--- src/Fl_Forms_Stubs.cxx.old	2009-01-13 13:14:45.000000000 -0500
+++ src/Fl_Forms_Stubs.cxx	2009-01-13 13:15:03.000000000 -0500
@@ -1,7 +1,7 @@
 // This files implements stubs for missing Forms libraries.
 //
-#include <Fl/Fl_Widget.H>
-#include <Fl/Fl_FormsBitmap.H>
+#include <FL/Fl_Widget.H>
+#include <FL/Fl_FormsBitmap.H>
 
 Fl_FormsBitmap::Fl_FormsBitmap(
   Fl_Boxtype t, int X, int Y, int W, int H, const char* l) : Fl_Widget(X, Y, W, H, l)
@@ -11,7 +11,7 @@
 
 void Fl_FormsBitmap::draw() {}
 
-#include <Fl/Fl_FormsPixmap.H>
+#include <FL/Fl_FormsPixmap.H>
 
 Fl_FormsPixmap::Fl_FormsPixmap(
   Fl_Boxtype t, int X, int Y, int W, int H, const char* l)
--- python/fltk_wrap.cpp.old	2009-01-13 13:19:57.000000000 -0500
+++ python/fltk_wrap.cpp	2009-01-13 15:22:01.000000000 -0500
@@ -5082,7 +5082,7 @@
 
 
 #include "FL/Fl_Gl_Window.H"
-#include "Fl/gl.h"
+#include "FL/gl.h"
 #include "string.h"
 
 SWIGINTERN void Fl_Gl_Window_show(Fl_Gl_Window *self,PyObject *count=0,PyObject *data=0){
@@ -5143,7 +5143,7 @@
 
     char tmp[rowsize];
 
-    PyString_AsStringAndSize(rgb_py, &rgb, &len);
+    PyString_AsStringAndSize(rgb_py, &rgb, (Py_ssize_t *) &len);
 
     row0 = rgb;
     row1 = rgb + (height-1) * rowsize;
@@ -39858,7 +39858,7 @@
     /* Check if the input support the buffer protocol */
     int size_buffer;
     const void * buffer;
-    int failure = PyObject_AsReadBuffer(obj1,&buffer,&size_buffer);
+    int failure = PyObject_AsReadBuffer(obj1,&buffer,(Py_ssize_t *)&size_buffer);
     if (!failure) {
       // work with array object
       arg2 = (uchar *) buffer;
@@ -40511,7 +40511,7 @@
     /* Check if the input support the buffer protocol */
     int size_buffer;
     const void * buffer;
-    int failure = PyObject_AsReadBuffer(obj1,&buffer,&size_buffer);
+    int failure = PyObject_AsReadBuffer(obj1,&buffer,(Py_ssize_t *)&size_buffer);
     if (!failure) {
       // work with array object
       arg2 = (uchar *) buffer;
@@ -55538,7 +55538,7 @@
     /* Check if the input support the buffer protocol */
     int size_buffer;
     const void * buffer;
-    int failure = PyObject_AsReadBuffer(obj0,&buffer,&size_buffer);
+    int failure = PyObject_AsReadBuffer(obj0,&buffer,(Py_ssize_t *)&size_buffer);
     if (!failure) {
       // work with array object
       arg1 = (uchar *) buffer;
@@ -55646,7 +55646,7 @@
     /* Check if the input support the buffer protocol */
     int size_buffer;
     const void * buffer;
-    int failure = PyObject_AsReadBuffer(obj0,&buffer,&size_buffer);
+    int failure = PyObject_AsReadBuffer(obj0,&buffer,(Py_ssize_t *)&size_buffer);
     if (!failure) {
       // work with array object
       arg1 = (uchar *) buffer;
@@ -59785,7 +59785,7 @@
     /* Check if the input support the buffer protocol */
     int size_buffer;
     const void * buffer;
-    int failure = PyObject_AsReadBuffer(obj3,&buffer,&size_buffer);
+    int failure = PyObject_AsReadBuffer(obj3,&buffer,(Py_ssize_t *)&size_buffer);
     if (!failure) {
       // work with array object
       arg4 = (uchar *) buffer;
@@ -63122,7 +63122,7 @@
     /* Check if the input support the buffer protocol */
     int size_buffer;
     const void * buffer;
-    int failure = PyObject_AsReadBuffer(obj0,&buffer,&size_buffer);
+    int failure = PyObject_AsReadBuffer(obj0,&buffer,(Py_ssize_t *)&size_buffer);
     if (!failure) {
       // work with array object
       arg1 = (uchar *) buffer;
--- setup.py.old	2009-01-13 13:42:03.000000000 -0500
+++ setup.py	2009-01-13 17:49:00.000000000 -0500
@@ -56,7 +56,7 @@
 # create proper paths
 fltk_lib_dir = os.path.join(fltk_dir, 'lib')
 fltk_includes = []
-compile_arg_list = []
+compile_arg_list = ['-Wno-error=format-security']
 link_arg_list = []
 
 # whatever is platform dependent
@@ -210,7 +210,6 @@
 
     print "Checking FLTK configuration ... "
     additional_libs, additional_dirs, additional_includes = fltk_config(fltk_dir)
-    
     for item in additional_includes:
         # already included?
         add = True
@@ -230,7 +229,7 @@
         lowercase_item = item.lower()
         if string.find(lowercase_item, "pthread") >= 0:
             doMulti = True
-        if string.find(lowercase_item, "fltk") < 0 and string.find(lowercase_item, "gl") >= 0:
+        if string.find(lowercase_item, "fltk") >= 0 and string.find(lowercase_item, "gl") >= 0:
             doOpenGL = True
         if string.find(lowercase_item, "fltk") >= 0 and string.find(lowercase_item, "forms") >= 0:
             doForms = True
